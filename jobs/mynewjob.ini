jobname=mynewjob
description=some bullshit
tags=this,that,theother
key=asdfdfsasdf
variables=fuck
fuck2
fuck3
script=
#!/bin/bash

## twerp
## the micro linux installation script

# script must be run as root
  if [[ $EUID -ne 0 ]]; then
  echo "script must be run as root"
  exit
  fi

# check ubuntu version (12.04 allowed)
  { lsb_release -a | grep "Ubuntu 12.04"; } || { echo "requires ubuntu 12.04"; exit; }

# install needed build software
  apt-get install -y make gcc libncurses5-dev bc genisoimage ia32-libs vim

# create directories
  mkdir -pv /twerp/src
  mkdir -pv /twerp/build

# create virtual drive to build in
  cd /twerp
  dd if=/dev/zero of=twerp.img bs=4k count=10000
  mkfs -t ext3 -F twerp.img
  mount -o loop twerp.img /twerp/build
  
# get sources {kernel, busybox, syslinux}, and artwork
  cd /twerp/src
  wget ftp://ftp.kernel.org/pub/linux/kernel/v3.x/linux-3.11.1.tar.bz2
  wget http://www.busybox.net/downloads/busybox-1.21.1.tar.bz2
  wget https://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-4.04.tar.gz
  wget http://www.osage.k12.ia.us/mediacenter/creative-commons-logo-640-80.jpg

# unpack the archives  
  cd /twerp/src
  tar jxvf busybox-1.21.1.tar.bz2 
  tar zxvf syslinux-4.04.tar.gz
  tar jxvf linux-3.11.1.tar.bz2 

# grab a vanilla .config seed (for speed of installation) then build the kernel
  cd /twerp/src/linux-3.11.1
  make mrproper
  wget -O .config http://kernel-seeds.org/seeds/64_bit/vanilla/3.11.1-x86_64-08.config
  sed -i 's/\#\ CONFIG_BLK_DEV_RAM\ is\ not\ set/CONFIG_BLK_DEV_RAM=y/g' .config
  sed -i 's/\#\ CONFIG_BLK_DEV_SX8\ is\ not\ set/CONFIG_BLK_DEV_RAM_COUNT=16/g' .config
  make oldconfig
  make -j2 bzImage
  make -j2 modules
  make INSTALL_MOD_PATH=$PWD/_pkg modules_install
 
# build busy box with default settings (780k)
 cd /twerp/src/busybox-1.21.1
 make defconfig
 make install
 chmod 4755 _install/bin/busybox
 cp -a _install/* /twerp/build/
 
# start configuration of twerp filesystem
  cd /twerp/build
  mkdir -p dev etc root home proc media mnt sys tmp var lib
  mkdir -p usr/{games,lib,local,share}
  mkdir -p var/{cache,games,lib,lock,log,run,spool}
  mkdir -p media/{cdrom,flash,usbdisk}
  mkdir -p dev/{pts,input,shm,net,usb}
  mkdir -p etc/init.d
  mkdir -p usr/share/doc
  mkdir -p boot/isolinux

  chmod 1777 tmp

  mknod dev/console c 5 1
  mknod dev/null c 1 3
  cd /twerp/build/dev
  /sbin/MAKEDEV ram

# configuration of system files
  cp /lib/x86_64-linux-gnu/{libcrypt.so.1,libm.so.6,libc.so.6} /twerp/build/lib
  cp /lib/ld-linux.so.2 /twerp/build/lib
  
  cat << EOF > /twerp/build/etc/inittab
null::sysinit:/etc/init.d/rc.init
null::sysinit:/bin/mount -t proc proc /proc
null::sysinit:/bin/hostname -F /etc/hostname
null::ctrlaltdel:/bin/umount -a -r
null::ctrlaltdel:/sbin/reboot
EOF

  echo "root:x:0:0:root:/root:/bin/sh" > /twerp/build/etc/passwd
  echo "root::10933:0:99999:7:::" > /twerp/build/etc/shadow
  echo "root:x:0:" > /twerp/build/etc/group
  echo "root:*::" > /twerp/build/etc/gshadow
  chmod 640 /twerp/build/etc/shadow
  chmod 640 /twerp/build/etc/gshadow
  
  cp /twerp/src/busybox-1.21.1/examples/bootfloppy/mkdevs.sh /twerp/build/bin
  /twerp/build//bin/mkdevs.sh /twerp/build/dev
  
# configure networking
  echo "127.0.0.1      localhost" > /twerp/build/etc/hosts
  echo "localnet    127.0.0.1" > /twerp/build/etc/networks
  echo "twerp" > /twerp/build/etc/hostname
  echo "order hosts,bind" > /twerp/build/etc/host.conf
  echo "multi on" >> /twerp/build/etc/host.conf

  cat << EOF > /twerp/build/etc/nsswitch.conf
passwd:     files
group:      files
shadow:     files
hosts:      files dns
networks:   files
EOF

# configure terminals on which root is allowed to login
  cat << EOF > /twerp/build/etc/securetty
console
# uart serial
ttyS0
# virtual consoles
tty1
tty2
tty3
tty4
tty5
tty6
tty7
EOF

# configure shells
  cat << EOF > /twerp/build/etc/shells
/bin/sh
/bin/bash
/bin/zsh
EOF

# busybox config
  cat << EOF > /twerp/build/etc/busybox.conf
[SUID]
su = ssx root.root
passwd = ssx root.root
loadkmap = ssx root.root
mount = ssx root.root
reboot = ssx root.root
halt = ssx root.root
EOF

# common profile
  cat << EOF > /twerp/build/etc/profile
PATH="/usr/sbin:/usr/bin:/sbin:/bin:/usr/games"
LD_LIBRARY_PATH="/usr/lib:/lib"
if [ "`id -u`" -eq 0 ]; then
  PS1='# '
else
  PS1='$ '
fi

if [ -f /etc/rc.local ]; then
      . /etc/rc.local
fi

DISPLAY=:0.0
export PATH LD_LIBRARY_PATH PS1 DISPLAY ignoreeof
umask 022
EOF

# fstab setup
  cat << EOF > /twerp/build/etc/fstab
proc            /proc        proc    defaults          0       0
sysfs           /sys         sysfs   defaults          0       0
devpts          /dev/pts     devpts  defaults          0       0
tmpfs           /dev/shm     tmpfs   defaults          0       0
EOF

# init script
  cat << EOF > /twerp/build/etc/init.d/rc.init
/bin/mount proc
/bin/mount -a
/bin/hostname -F /etc/hostname
/sbin/ifconfig lo 127.0.0.1 up
EOF
  chmod +x etc/init.d/rc.init
  
# copy kernel to boot dir
  cp /twerp/src/linux-3.11.1/arch/x86/boot/bzImage /twerp/build/boot/

# syslinux setup
  #dd if=/twerp/src/syslinux-6.01/mbr.bin of=/dev/loop0
  #cp /twerp/src/syslinux-6.01/bios/com32/elflink/ldlinux/ldlinux.c32 /twerp/build/boot/
  cp /twerp/src/syslinux-4.04/core/isolinux.bin /twerp/build/boot/isolinux/
  
  cat << EOF > /twerp/build/boot/isolinux/isolinux.cfg
display welcome.msg
prompt 1
default 1

label 1
  kernel /boot/bzImage
  append initrd=/boot/twerpfs.gz
EOF

  cat << EOF > /twerp/build/boot/isolinux/welcome.msg
twerp!
EOF

# create the twerp iso
# for any changes made to twerp, these have to be run again

# cpio image creation and copy
  cd /twerp/build
  find . -print | cpio -o -H newc | gzip -9 > /twerp/build/boot/twerpfs.gz

# create the bootable image
  cd /twerp
  genisoimage -R -o twerp-mini.iso -b boot/isolinux/isolinux.bin \
  -c boot/isolinux/boot.cat -no-emul-boot -boot-load-size 4 \
  -V "twerp" -input-charset iso8859-1 -boot-info-table /twerp/build
